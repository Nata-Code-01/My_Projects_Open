#Задание 1. Анализ датасета с помощью библиотеки YData Profiling. Задание выполнить в отдельном блокноте [Фамилия, Группа]_EDA_YD_titanic.ipynb.
'''
В этом задании вы будете использовать библиотеку YData Profiling для анализа набора данных 'titanic.csv'.

Загрузите данные из файла 'titanic.csv'.
Импортируйте библиотеку ydata_profiling и вызовите метод 'ProfileReport()', передав ему созданный DataFrame.
Проанализируйте полученный отчет и ответьте на следующие вопросы:
Какой процент пассажиров выжил?
Какова была медианная стоимость билета?
Какой процент пассажиров имел кабину?
Сколько было уникальных значений в столбце "Embarked"?
Отобразите матрицу корреляции для всех числовых признаков.
Для выполнения данного задания необходимо знание базовых операций с Pandas. Например, как загрузить данные, как выбирать столбцы и строки и т.д.

Удачи!
'''

!pip install -U ydata-profiling

from ydata_profiling import ProfileReport
import pandas as pd

titanic = pd.read_csv('titanic.csv')                                            # Считываем содержимое файла titanic.csv в датафрейм titanic.

print(titanic.head(), sep='')                                                   # Выведем первые 5 строк таблицы.

report_titanic = ProfileReport(titanic)                                         # Создаем отчет YData Profiling.

display(report_titanic)                                                         # Отображаем отчет.


'''
Проанализируйте полученный отчет и ответьте на следующие вопросы:

Какой процент пассажиров выжил?
Перейдя к разделу "Variables" и выбрав столбец "survived", можем увидеть, что значение 1 имеют 500 строк. Далее, выбрав "Common Values" в "Categories", заметим, что 500 значений 1 - это 38.2%.

Какова была медианная стоимость билета?

Аналогичным спопособ находим в разделе "Statistic" медиану для стоимости билетов (fare): 14.4542.

Какой процент пассажиров имел кабину? Обратимся к разделу "Alert" в котором заметим следующее: cabin has 1014 (77.5%) missing values. Соответсвенно, 22.5% пассажиров имели кабину.

Сколько было уникальных значений в столбце "Embarked"?

Можно посмотреть в разделе "Variables": уникальных значений было 3 (S, C, Q).
Матрица корреляции автоматически создаётся в отчёте, её можно увидеть в разделе "Correlations".
'''

#Задание 2. AutoViz. Задание выполнить в отдельном блокноте [Фамилия, Группа]_EDA_AV_iris.ipynb.
#Проведите разведываетльный анализ данных по ирисам с помощью пакета AutoViz, используйте документацию пакета по ссылке https://pypi.org/project/autoviz/.
#AutoViz. Выпущен: 10 июн. 2024 г.

!pip install autoviz

import seaborn as sns
from autoviz import AutoViz_Class

iris = sns.load_dataset("iris")                                                 # Загружаем датасет с ирисами.

AV = AutoViz_Class()                                                            # # Инициализация AutoViz.

dft = AV.AutoViz(                                                               # Реализуем визуализацию, для этого настраиваем раздичные параметры.
    "",
    depVar="",
    dfte=iris,
    header=0,
    verbose=1,
    lowess=False,
    chart_format='bokeh',
    save_plot_dir=None)

#Задание 3. D-tale. Проведите разведываетльный анализ данных по ирисам с помощью пакета https://github.com/man-group/dtale.
#Задание выполнить в отдельном блокноте [Фамилия, Группа]_EDA_DT_iris.ipynb.

!pip install dtale

import seaborn as sns
import dtale
import dtale.app as dtale_app

dtale_app.USE_COLAB = True                                                      # По умолчанию значение False и работать в Google Colab не будет.

iris = sns.load_dataset("iris")                                                 # Загружаем датасет с ирисами.

d = dtale.show(iris)
d.data                                                                          # Получить необработанный фрейм данных без какой-либо сортировки или редактирования,
                                                                                # произведенных через пользовательский интерфейс
